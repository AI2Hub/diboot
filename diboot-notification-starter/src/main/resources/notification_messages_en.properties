#message
validation.message.appModule.Length.message=application module length should be less than {max}
validation.message.businessType.NotNull.message=business type cannot be empty
validation.message.businessType.Length.message=business type length should be less than {max}
validation.message.businessCode.NotNull.message=business identifier cannot be empty
validation.message.businessCode.Length.message=business identifier length should be less than {max}
validation.message.title.Length.message=title length should be less than {max}
validation.message.content.NotNull.message=content cannot be empty
validation.message.sender.NotNull.message=sender cannot be empty
validation.message.sender.Length.message=sender length should be less than {max}
validation.message.receiver.NotNull.message=receiver cannot be empty
validation.message.receiver.Length.message=receiver length should be less than {max}
validation.message.channel.NotNull.message=sending channel cannot be empty
validation.message.channel.Length.message=sending channel length should be less than {max}
validation.message.status.NotNull.message=message status cannot be empty
validation.message.status.Length.message=message status length should be less than {max}
validation.message.extData.Length.message=extended data length should be less than {max}

#messageTemplate
validation.messageTemplate.appModule.Length.message=application module length should be less than {max}
validation.messageTemplate.code.NotNull.message=template code cannot be empty
validation.messageTemplate.code.Length.message=template code length should be less than {max}
validation.messageTemplate.title.NotNull.message=template title cannot be empty
validation.messageTemplate.title.Length.message=template title length should be less than {max}
validation.messageTemplate.content.NotNull.message=template content cannot be empty

#businessException
exception.business.messageService.parseFailed=message parsing failed
exception.business.messageService.fetchTempFailed=failure to fetch template
exception.business.messageService.contentNotNull=message content cannot be empty
exception.business.messageService.sendFailed=message sending failed

#invalidUsageException
exception.invalidUsage.messageService.fetchChannelFailed=failure to fetch sending channel {}
exception.invalidUsage.simpleEmailChannel.send.message=email cannot be sent: no JavaMailSender instance, please check related configurations and dependency environments.