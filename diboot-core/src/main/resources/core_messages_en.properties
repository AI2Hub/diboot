# Common Types
validation.type.NotNull.message=type cannot be empty
validation.label.NotNull.message=label cannot be empty
validation.id.NotNull.message=id cannot be empty
validation.newSortId.NotNull.message=newSortId cannot be empty

# Dictionary Type
validation.dictionary.type.NotNull.message=dictionary type cannot be empty!
validation.dictionary.type.Length.message=dictionary type length exceeds limit!
validation.dictionary.itemName.NotNull.message=dictionary item name cannot be empty!
validation.dictionary.itemName.Length.message=dictionary item name length exceeds limit!
validation.dictionary.itemValue.Length.message=dictionary item code length exceeds limit!
validation.dictionary.description.Length.message=dictionary remarks length exceeds limit!

# Status
status.ok.message=Operation successful
status.warn_partial_success.message=partially successful
status.warn_performance_issue.message=potential performance issue
status.fail_invalid_param.message=mismatched request parameters
status.fail_invalid_token.message=invalid or expired token
status.fail_no_permission.message=no permission to execute operation
status.fail_not_found.message=requested resource does not exist
status.fail_validation.message=data validation failed
status.fail_operation.message=operation execution failed
status.fail_request_timeout.message=request connection timeout
status.fail_authentication.message=authentication failed
status.fail_invalid_tenant.message=invalid tenant
status.fail_invalid_account.message=invalid account
status.fail_exception.message=system exception
status.fail_service_unavailable.message=service unavailable

# BusinessException
exception.business.baseController.loadRelatedData.nullEntityClass=relatedData: {} does not exist
exception.business.baseController.loadRelatedData.nullServiceClass=Service for relatedData: {} does not exist
exception.business.baseController.loadRelatedData.noField=relatedData: {} has no `{}` property
exception.business.JSON.toJSONString.message=Java to Json conversion error
exception.business.JSON.toJavaObject.message=Json to Java conversion error
exception.business.JSON.parseMap.message=Json to Map conversion error
exception.business.JSON.parseObject.message=Json to Java conversion error
exception.business.JSON.parseArray.message=Json to List conversion error
exception.business.baseServiceImpl.fillTreeNodeParentPath.message=Cannnot set parent node as itself
exception.business.baseServiceImpl.deleteEntity.message=deletion not allowed, sub-nodes exist under current node
exception.business.baseServiceImpl.isValueUnique.message=Field value to check cannot be empty
exception.business.baseServiceImpl.sort.nullParentId=Tree structure sorting requires specifying newParentId, parentId should not be null
exception.business.baseServiceImpl.sort.nullOldSortId=Tree structure sorting requires specifying newParentId, parentId should not be null
exception.business.beanUtils.buildTree.bindSelf=parentId refers to itself, please check! {}: {}
exception.business.beanUtils.buildTree.rootParentIdNotUnique=buildTree root parentId is not unique
exception.business.v.securityCheck.param=illegal parameter: {}
exception.business.v.securityCheck.paramValue=illegal parameter value: {}
exception.business.baseTranslator.translateInsertValues.noCache=no cache information for {}
exception.business.dictionaryService.createDictAndChildren.message=failed to create dictionary child items, type= {}
exception.business.dictionaryService.updateItem=exception updating dictionary child item
exception.business.dictionaryService.createItem=exception creating dictionary child item
exception.business.dictionaryService.deleteItem=exception deleting dictionary child item
exception.business.dictionaryService.repeatItemValue=duplicate dictionary option value: {}
exception.business.dictionaryService.repeatItemName=duplicate dictionary option name: {}

# InvalidUsageException
exception.invalidUsage.binder.parseConditionFailed=invocation error: unable to parse field association from condition.
exception.invalidUsage.binder.bindField.nonField=invocation error: field binding must specify field
exception.invalidUsage.JSON.getObjectMapper.message=objectmapper instance not found, please check configuration class
exception.invalidUsage.joinsBinder.executeJoinQuery.message=single table query object lacks BaseService/IService implementation: {}
exception.invalidUsage.baseBinder.notSupport=intermediate table association暂时不支持涉及目标表多列情况!
exception.invalidUsage.baseBinder.joinOnFieldComparison.message=field/column {} does not exist
exception.invalidUsage.baseBinder.getService.message={} lacks BaseService/IService implementation class, unable to execute annotation binding!
exception.invalidUsage.remoteBindingManager.getRemoteBindingProvider.message=remoteBindingProviderFactory not implemented, remote binding functionality unavailable!
exception.invalidUsage.baseConditionManager.extractMiddleTableName.message=intermediate table association conditions currently support only 1 intermediate table! Current includes: {}
exception.invalidUsage.joinConditionManager.parseJoinCondition.message=unable to parse annotated condition: {}
exception.invalidUsage.extQueryWrapper.nonServiceImpl=query object lacks BaseService/IService implementation: {}
exception.invalidUsage.middleTable.nonFilterCondition=unreasonable intermediate table query: No filter condition!
exception.invalidUsage.parserCache.getMapperInstance.message=mapper definition for {} not found!
exception.invalidUsage.parserCache.getDataMaskFieldList.message=`@DataMask` supports String type fields only.
exception.invalidUsage.cacheManager.nonCacheInit=unable to get cache: {}, please check initialization
exception.invalidUsage.staticMemoryCacheManager.clearOutOfDateData.message=StaticMemoryCacheManager has no expired cache, clearing not supported!
exception.invalidUsage.defaultEncryptTypeHandler.getDataEncryptHandler.message=unable to get DataEncryptHandler implementation class for data encryption/decryption, please check!
exception.invalidUsage.sensitiveInfoSerialize.serialize.message=unable to get DataMaskHandler implementation class for data masking, please check!
exception.invalidUsage.dataAccessControlHandler.buildDataAccessExpression.message=unable to obtain DataAccessInterface from context for data access permissions
exception.invalidUsage.baseService.nullDriverId=active ID value cannot be empty!
exception.invalidUsage.baseService.nonServiceOrMapper=service or Mapper definition for {} not found!
exception.invalidUsage.baseService.notSupportWrapper=unsupported Wrapper type: {}
exception.invalidUsage.baseService.callGetLabelValueListFailed=invocation error: getLabelValueList must specify return label, value(,ext) fields in sequence, e.g., new QueryWrapper<Dictionary>().lambda().select(Dictionary::getItemName, Dictionary::getItemValue)
exception.invalidUsage.sqlExecutor.getDatabase.message=current runtime environment lacks database source configuration
exception.invalidUsage.sqlExecutor.fetchJdbcTemplateFailed=unable to obtain JdbcTemplate instance
exception.invalidUsage.contextHolder.getApplicationContext.message=check invocation timing
exception.invalidUsage.sqlFileInitializer.notSupportDbInit=automatic initialization for {} database not supported yet
exception.invalidUsage.baseTranslator.notSupportTranslator=translation for SQL {} not supported yet