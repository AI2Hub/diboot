#iamAccount
validation.iamAccount.userType.NotNull.message=user type cannot be empty
validation.iamAccount.userType.Length.message=user type length should be less than {max}
validation.iamAccount.userId.NotNull.message=user id cannot be empty
validation.iamAccount.authType.NotNull.message=authentication method cannot be empty
validation.iamAccount.authType.Length.message=authentication method length should be less than {max}
validation.iamAccount.authAccount.NotNull.message=username cannot be empty
validation.iamAccount.authAccount.Length.message=username length should be less than {max}
validation.iamAccount.authSecret.Length.message=password length should be less than {max}
validation.iamAccount.secretSalt.Length.message=salt length should be less than {max}
validation.iamAccount.status.Length.message=status length should be less than {max}

#iamLoginTrace
validation.iamLoginTrace.userType.NotNull.message=user type cannot be empty
validation.iamLoginTrace.userType.Length.message=user type length should be less than {max}
validation.iamLoginTrace.userId.NotNull.message=user id cannot be empty
validation.iamLoginTrace.authType.NotNull.message=auth type cannot be empty
validation.iamLoginTrace.authType.Length.message=auth type method length should be less than {max}
validation.iamLoginTrace.authAccount.NotNull.message=username cannot be empty
validation.iamLoginTrace.authAccount.Length.message=username length should be less than {max}
validation.iamLoginTrace.ipAddress.Length.message=ip length should be less than {max}
validation.iamLoginTrace.userAgent.Length.message=user-agent length should be less than {max}

#iamOperationLog
validation.iamOperationLog.businessObj.Length.message=business object length should be less than {max}
validation.iamOperationLog.operation.Length.message=operation length should be less than {max}
validation.iamOperationLog.userType.Length.message=user type length should be less than {max}
validation.iamOperationLog.userRealname.Length.message=realname length should be less than {max}
validation.iamOperationLog.requestUri.Length.message=request uri length should be less than {max}
validation.iamOperationLog.requestMethod.Length.message=request method length should be less than {max}
validation.iamOperationLog.requestParams.Length.message=request parameters length should be less than {max}
validation.iamOperationLog.requestIp.Length.message=request ip length should be less than {max}
validation.iamOperationLog.errorMsg.Length.message=error message length should be less than {max}

#iamOrg
validation.iamOrg.name.NotNull.message=name cannot be empty
validation.iamOrg.name.Length.message=name length should be less than {max}
validation.iamOrg.type.NotNull.message=organization type cannot be empty
validation.iamOrg.type.Length.message=organization type length should be less than {max}
validation.iamOrg.code.NotNull.message=code cannot be empty
validation.iamOrg.code.Length.message=code length should be less than {max}

#iamPosition
validation.iamPosition.name.NotNull.message=name cannot be empty
validation.iamPosition.name.Length.message=name length should be less than {max}
validation.iamPosition.code.NotNull.message=code cannot be empty
validation.iamPosition.code.Length.message=code length should be less than {max}

#iamResource
validation.iamResource.displayType.NotNull.message=display type cannot be empty
validation.iamResource.displayType.Length.message=display type length should be less than {max}
validation.iamResource.displayName.NotNull.message=display name cannot be empty
validation.iamResource.displayName.Length.message=display name length should be less than {max}
validation.iamResource.routePath.Length.message=route path length should be less than {max}
validation.iamResource.resourceCode.NotNull.message=frontend resource code cannot be empty
validation.iamResource.resourceCode.Length.message=frontend resource code length should be less than {max}
validation.iamResource.permissionCode.Length.message=permission code length should be less than {max}
validation.iamResource.meta.Length.message=meta configuration should be less than {max}
validation.iamResource.status.Length.message=status length should be less than {max}

#iamRole
validation.iamRole.name.NotNull.message=name cannot be empty
validation.iamRole.name.Length.message=name length should be less than {max}
validation.iamRole.code.NotNull.message=code cannot be empty
validation.iamRole.code.Length.message=code length should be less than {max}

#iamRoleResource
validation.iamRoleResource.roleId.NotNull.message=role id cannot be empty
validation.iamRoleResource.resourceId.NotNull.message=resource id cannot be empty

#iamUser
validation.iamUser.orgId.NotNull.message=organization id cannot be empty
validation.iamUser.userNum.NotNull.message=user number cannot be empty
validation.iamUser.userNum.Length.message=user number length should be less than {max}
validation.iamUser.realname.NotNull.message=real name cannot be empty
validation.iamUser.realname.Length.message=real name length should be less than {max}
validation.iamUser.gender.NotNull.message=gender cannot be empty
validation.iamUser.gender.Length.message=gender length should be less than {max}
validation.iamUser.mobilePhone.Length.message=mobile phone length should be less than {max}
validation.iamUser.email.Length.message=email length should be less than {max}
validation.iamUser.status.NotNull.message=status cannot be empty
validation.iamUser.status.Length.message=status length should be less than {max}

#iamUserPosition
validation.iamUserPosition.userType.NotNull.message=user type cannot be empty
validation.iamUserPosition.userType.Length.message=user type length should be less than {max}
validation.iamUserPosition.userId.NotNull.message=user id cannot be empty
validation.iamUserPosition.orgId.NotNull.message=organization id cannot be empty
validation.iamUserPosition.positionId.NotNull.message=position id cannot be empty

#iamUserRole
validation.iamUserRole.userType.NotNull.message=user type cannot be empty
validation.iamUserRole.userId.NotNull.message=user id cannot be empty
validation.iamUserRole.roleId.NotNull.message=role id cannot be empty

#baseUserInfoDTO
validation.baseUserInfoDTO.realname.NotNull.message=real name cannot be empty
validation.baseUserInfoDTO.realname.Length.message=real name length should be less than {max}
validation.baseUserInfoDTO.gender.NotNull.message=gender cannot be empty
validation.baseUserInfoDTO.gender.Length.message=gender length should be less than {max}
validation.baseUserInfoDTO.mobilePhone.Length.message=mobile phone length should be less than {max}
validation.baseUserInfoDTO.email.Length.message=email length should be less than {max}

#authCredential
validation.authCredential.authType.NotNull.message=authentication method cannot be empty

#changePwdDTO
validation.changePwdDTO.oldPassword.NotNull.message=old password cannot be empty
validation.changePwdDTO.password.NotNull.message=new password cannot be empty
validation.changePwdDTO.confirmPassword.NotNull.message=confirm password cannot be empty

#encryptCredential
validation.encryptCredential.ciphertext.NotNull.message=credential information cannot be empty

#pwdCredential
validation.pwdCredential.username.NotNull.message=username cannot be empty
validation.pwdCredential.password.NotNull.message=password cannot be empty

#BusinessException
exception.business.oauth2SSOService.authCenterValidFailed=authentication center validation failed
exception.business.SSOManager.nullCallback=callback address is empty
exception.business.oauthSSOManager.nonConfigClientSecret=client secret for {} is not configured
exception.business.oauthSSOManager.nullAccessToken=accessToken is empty
exception.business.oauthSSOManager.ssoLoginFailed=single sign-on verification failed
exception.business.oauthSSOManager.fetchUserInfoFailed=failure to fetch user info
exception.business.casSSOManager.validTicketFailed=ticket validation failed
exception.business.userService.userNumExist=employee number {} already exists, please reset
exception.business.userService.deleteSelfAccount=cannot delete own account
exception.business.userService.deleteRecordNonExist=record to delete does not exist
exception.business.account.nonExist=account info does not exist
exception.business.account.nonSupportModifyPwd=this login method does not support changing password
exception.business.account.pwdInconformable=password and confirm password do not match
exception.business.account.oldPwdError=incorrect old password
exception.business.account.exist=account {} already exists
exception.business.authService.authFailed=authentication failed
exception.business.resourceService.createFailed=failure to create resource permission
exception.business.resourceService.setParentIdEqId=cannot set parent menu resource as itself
exception.business.roleResourceService.fetchMenuAfterLogin=get menu authorization after login
exception.business.roleResourceService.tenantNonConfigPermission=current tenant has not configured permissions

#InvalidUsageException
exception.invalidUsage.userService.initRestTemplate=please initialize RestTemplate
exception.invalidUsage.permissionCacheManager.getPermissionCodeWrapper.message=annotation @BindPermission cannot auto-extract code: {} class without generic Entity parameter, please manually specify code value!
exception.invalidUsage.iamSecurityUtils.getLoginUserByToken.message=cannot get login user cache, please check dependency environment!
exception.invalidUsage.tokenUtils.getIamCacheManager.message=iamCacheManager implementation class cannot be recognized, please declare @Bean(name = "iamCacheManager") in configuration class.

#AuthenticationException
exception.authentication.authService.accountForbidden=user account {0} is disabled!
exception.authentication.authService.accountLocked=user account {0} is locked!

#PermissionException
exception.permission.userRoleService.deleteUserRoleRelations.noPermission=non-super admin users cannot delete super admin user permissions!
exception.permission.userRoleService.checkSuperAdminIdentity.noPermission=non-super admin users cannot grant super admin permissions to other users.